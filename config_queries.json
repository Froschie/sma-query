{
    "actuals_5min": "CREATE CONTINUOUS QUERY actuals_5min ON +influx_db+ BEGIN SELECT mean(solar_act) AS solar_5min, mean(consumption_act) AS consumption_5min, mean(bezug_act) AS bezug_5min, mean(einspeisung_act) AS einspeisung_5min INTO +influx_db+.autogen.actuals_5min FROM +influx_db+.autogen.actuals GROUP BY time(5m), serial, device END",
    "actuals_60min": "CREATE CONTINUOUS QUERY actuals_60min ON +influx_db+ BEGIN SELECT mean(solar_act) AS solar_60min, mean(consumption_act) AS consumption_60min, mean(bezug_act) AS bezug_60min, mean(einspeisung_act) AS einspeisung_60min INTO +influx_db+.autogen.actuals_60min FROM +influx_db+.autogen.actuals GROUP BY time(1h), serial, device END",
    "totals_daily": "CREATE CONTINUOUS QUERY totals_daily ON +influx_db+ RESAMPLE EVERY 1m BEGIN SELECT spread(solar_total) AS solar_daily, spread(bezug_total) AS bezug_daily, spread(consumption_total) AS consumption_daily, spread(einspeisung_total) AS einspeisung_daily INTO +influx_db+.autogen.totals_daily FROM +influx_db+.autogen.totals GROUP BY time(1d), serial, device TZ('Europe/Berlin') END",
    "solar_max": "CREATE CONTINUOUS QUERY solar_max ON +influx_db+ RESAMPLE EVERY 5m BEGIN SELECT max(solar_5min) AS solar_max INTO +influx_db+.autogen.totals_daily FROM +influx_db+.autogen.actuals_5min GROUP BY time(1d), serial, device TZ('Europe/Berlin') END",
    "consumption_min": "CREATE CONTINUOUS QUERY consumption_min ON +influx_db+ RESAMPLE EVERY 5m BEGIN SELECT min(consumption_5min) AS consumption_min INTO +influx_db+.autogen.totals_daily FROM +influx_db+.autogen.actuals_5min GROUP BY time(1d), serial, device TZ('Europe/Berlin') END"
}